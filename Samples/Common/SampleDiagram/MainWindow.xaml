<fluent:RibbonWindow x:Class="SampleDiagram.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:local="clr-namespace:SampleDiagram"
		xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
		xmlns:xaml="http://schemas.stocksharp.com/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		mc:Ignorable="d"
		Title="Sample diagram" Height="768" Width="1024" WindowState="Maximized"
        DontUseDwm="False" WindowStartupLocation="CenterScreen"
        Closing="MainWindow_OnClosing" Loaded="MainWindow_OnLoaded">

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.AddCommand}"
						CanExecute="AddCommand_OnCanExecute"
						Executed="AddCommand_OnExecuted"/>

        <CommandBinding Command="{x:Static local:MainWindow.OpenCommand}"
						CanExecute="OpenCommand_OnCanExecute"
						Executed="OpenCommand_OnExecuted"/>

        <CommandBinding Command="{x:Static local:MainWindow.RemoveCommand}"
						CanExecute="RemoveCommand_OnCanExecute"
						Executed="RemoveCommand_OnExecuted"/>

        <CommandBinding Command="{x:Static local:MainWindow.SaveCommand}"
						CanExecute="SaveCommand_OnCanExecute"
						Executed="SaveCommand_OnExecuted"/>

        <CommandBinding Command="{x:Static local:MainWindow.DiscardCommand}"
						CanExecute="DiscardCommand_OnCanExecute"
						Executed="DiscardCommand_OnExecuted"/>

        <CommandBinding Command="{x:Static local:MainWindow.EmulateStrategyCommand}"
						CanExecute="EmulateStrategyCommand_OnCanExecute"
						Executed="EmulateStrategyCommand_OnExecuted"/>

        <CommandBinding Command="{x:Static local:MainWindow.ExecuteStrategyCommand}"
						CanExecute="ExecuteStrategyCommand_OnCanExecute"
						Executed="ExecuteStrategyCommand_OnExecuted"/>
    </Window.CommandBindings>
	
    <Grid Margin="3">
        <Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <fluent:Ribbon Grid.Row="0" AutomaticStateManagement="True"
                       x:Name="Ribbon">
            <fluent:Ribbon.ContextualGroups>
                <fluent:RibbonContextualTabGroup x:Name="DesignerRibbonGroup"
                                                 BorderBrush="DodgerBlue"
                                                 Background="DodgerBlue"
                                                 Foreground="Black"
                                                 Header="CUSTOM"
                                                 Visibility="Visible" />

                <fluent:RibbonContextualTabGroup x:Name="EmulationRibbonGroup"
                                                 BorderBrush="DodgerBlue"
                                                 Background="DodgerBlue"
                                                 Foreground="Black"
                                                 Header="CUSTOM"
                                                 Visibility="Visible" />
            </fluent:Ribbon.ContextualGroups>

            <fluent:RibbonTabItem Header="Schemas"
								  x:Name="RibbonCommonTab">
                <fluent:RibbonGroupBox Header="Compositions / strategies">
                    <fluent:SplitButton Header="Add" 
										SizeDefinition="Middle"
                                        Icon="pack://application:,,,/StockSharp.Xaml;component/Images/add_16x16.png"
                                        LargeIcon="pack://application:,,,/StockSharp.Xaml;component/Images/add_16x16.png">
                        <fluent:MenuItem Header="Composition"
										 Command="{x:Static local:MainWindow.AddCommand}"
										 CommandParameter="{x:Static local:CompositionType.Composition}" />
                        <fluent:MenuItem Header="Strategy"
										 Command="{x:Static local:MainWindow.AddCommand}"
										 CommandParameter="{x:Static local:CompositionType.Strategy}" />
                    </fluent:SplitButton>
                    <fluent:Button Header="Open"
								   SizeDefinition="Middle"
								   Icon="pack://application:,,,/SampleDiagram;component/Images/FolderOpen.png"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/FolderOpen.png"
								   Command="{x:Static local:MainWindow.OpenCommand}"
								   CommandParameter="{Binding ElementName=SolutionExplorer, Path=SelectedItem}" />
                    <fluent:Button Header="Remove"
								   SizeDefinition="Middle"
								   Icon="pack://application:,,,/StockSharp.Xaml;component/Images/remove_16x16.png"
								   LargeIcon="pack://application:,,,/StockSharp.Xaml;component/Images/remove_16x16.png"
								   Command="{x:Static local:MainWindow.RemoveCommand}"
								   CommandParameter="{Binding ElementName=SolutionExplorer, Path=SelectedItem}" />
                    <Separator />

                    <fluent:Button Header="Import"
								   SizeDefinition="Middle"
								   Icon="pack://application:,,,/StockSharp.Xaml;component/Images/open_16x16.png"
								   LargeIcon="pack://application:,,,/StockSharp.Xaml;component/Images/open_16x16.png" />
                    <fluent:Button Header="Export"
								   SizeDefinition="Middle"
								   Icon="pack://application:,,,/StockSharp.Xaml;component/Images/save_16x16.png"
								   LargeIcon="pack://application:,,,/StockSharp.Xaml;component/Images/save_16x16.png" />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Run and test">
                    <fluent:Button Header="Emulation"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/history-testing-icon_24x24.png" 
								   Command="{x:Static local:MainWindow.EmulateStrategyCommand}"
								   CommandParameter="{Binding ElementName=SolutionExplorer, Path=SelectedItem}" />
                    <fluent:Button Header="Real"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/terminal_32x32.png" 
								   Command="{x:Static local:MainWindow.ExecuteStrategyCommand}"
								   CommandParameter="{Binding ElementName=SolutionExplorer, Path=SelectedItem}" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
			
            <fluent:RibbonTabItem Header="Designer" 
								  x:Name="RibbonDesignerTab"
								  Group="{Binding ElementName=DesignerRibbonGroup, Mode=OneWay}">
                <fluent:RibbonGroupBox Header="Common">
                    <fluent:TextBox Header="Name"
									x:Name="CompositionNameTextBox"
									InputWidth="90"
                                    MaxLength="128"
									Text="{Binding Element.Name}"/>
                    <fluent:Button Header="Save"
								   Icon="pack://application:,,,/StockSharp.Xaml;component/Images/save_16x16.png"
								   LargeIcon="pack://application:,,,/StockSharp.Xaml;component/Images/save_16x16.png"
								   SizeDefinition="Middle" 
								   Command="{x:Static local:MainWindow.SaveCommand}"
								   CommandParameter="{Binding}"/>
	                <fluent:Button Header="Revert"
								   Icon="pack://application:,,,/StockSharp.Xaml;component/Images/undo_16x16.png"
								   LargeIcon="pack://application:,,,/StockSharp.Xaml;component/Images/undo_16x16.png"
								   SizeDefinition="Middle" 
								   Command="{x:Static local:MainWindow.DiscardCommand}"
								   CommandParameter="{Binding}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Run and test">
                    <fluent:Button Header="Emulation"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/history-testing-icon_24x24.png" 
								   Command="{x:Static local:MainWindow.EmulateStrategyCommand}"
								   CommandParameter="{Binding}" />
	                <fluent:Button Header="Real"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/terminal_32x32.png" 
								   Command="{x:Static local:MainWindow.ExecuteStrategyCommand}"
								   CommandParameter="{Binding}" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
			
            <fluent:RibbonTabItem Header="Emulation"
								  x:Name="RibbonEmulationTab"
								  Group="{Binding ElementName=EmulationRibbonGroup, Mode=OneWay}">
                <fluent:RibbonGroupBox Header="Common">
                    <fluent:Button Header="Start"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/start_32x32.png"
								   Command="{Binding StartCommand}" />
                    <fluent:Button Header="Stop"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/stop_32x32.png" 
								   Command="{Binding StopCommand}" />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Debugger">
                    <fluent:Button Header="Add break"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/BreakpointOn_16x16.png"
								   Command="{Binding AddBreakpointCommand}" />
	                <fluent:Button Header="Remove break"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/BreakpointOff_16x16.png"
								   Command="{Binding RemoveBreakpointCommand}" />
					
					<Separator />
					
	                <fluent:Button Header="Step next"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/StepOver_16x16.png"
								   Command="{Binding StepNextCommand}" />
	                <fluent:Button Header="Step to out"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/ToOutput_16x16.png"
								   Command="{Binding StepToOutParamCommand}" />
	                <fluent:Button Header="Step into"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/StepIn_16x16.png"
								   Command="{Binding StepIntoCommand}" />
	                <fluent:Button Header="Step out"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/Stepout_16x16.png"
								   Command="{Binding StepOutCommand}" />
	                <fluent:Button Header="Continue"
								   SizeDefinition="Large"
								   LargeIcon="pack://application:,,,/SampleDiagram;component/Images/Continue_16x16.png"
								   Command="{Binding ContinueCommand}" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>
		
        <xcad:DockingManager Grid.Row="1" 
							 x:Name="DockingManager" 
							 ActiveContentChanged="DockingManager_OnActiveContentChanged"
							 DocumentClosing="DockingManager_OnDocumentClosing">
            <!--<xcad:DockingManager.Theme>
                <xcad:MetroTheme />
            </xcad:DockingManager.Theme>-->

            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Vertical">
                    <xcad:LayoutPanel Orientation="Horizontal">
                        <xcad:LayoutAnchorablePaneGroup DockWidth="200">
                            <xcad:LayoutAnchorablePane>
                                <xcad:LayoutAnchorable Title="Solution explorer" ContentId="SolutionExplorer" CanClose="False" AutoHideWidth="200">
                                    <local:SolutionExplorerControl x:Name="SolutionExplorer" Open="SolutionExplorer_OnOpen"/>
                                </xcad:LayoutAnchorable>
                            </xcad:LayoutAnchorablePane>
                        </xcad:LayoutAnchorablePaneGroup>
						
                        <xcad:LayoutDocumentPaneGroup>
                            <xcad:LayoutDocumentPane />
                        </xcad:LayoutDocumentPaneGroup>
                    </xcad:LayoutPanel>
                    
					<xcad:LayoutAnchorablePaneGroup DockHeight="200">
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Logs" ContentId="Logs" CanClose="False" AutoHideHeight="200">
                                <xaml:Monitor x:Name="Monitor"/>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </xcad:DockingManager>
    </Grid>
</fluent:RibbonWindow>
